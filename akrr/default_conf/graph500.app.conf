info = ""

walltime_limit = 30
parser = "graph500_parser.py"

# path to run script relative to AppKerDir on particular resource
executable = "execs/graph500/src/graph500_reference_bfs_sssp"
input_param = "inputs"
input_arg= "23 16"

run_script_pre_run = """
#create working dir
export AKRR_TMP_WORKDIR=`mktemp -d {network_scratch}/ior.XXXXXXXXX`
echo "Temporary working directory: $AKRR_TMP_WORKDIR"
cd $AKRR_TMP_WORKDIR

#set executable location
EXE={appkernel_dir}/{executable}

"""
run_script_post_run = """#clean-up
cd $AKRR_TASK_WORKDIR
if [ "${{AKRR_DEBUG=no}}" = "no" ]
then
        echo "Deleting temporary files"
        rm -rf $AKRR_TMP_WORKDIR
else
        echo "Copying temporary files"
        cp -r $AKRR_TMP_WORKDIR workdir
        rm -rf $AKRR_TMP_WORKDIR
fi
"""

appkernel_run_env_template = """
#Load application environment
module load intel intel-mpi
module list

#set how to run app kernel
RUN_APPKERNEL="srun $EXE"
"""

# default template for app kernel launching
akrr_run_appkernel_template = """#Execute AppKer
akrr_write_to_gen_info "appkernel_start_time" "`date`"
$RUN_APPKERNEL {input_arg} >> $AKRR_APP_STDOUT_FILE 2>&1
akrr_write_to_gen_info "appkernel_end_time" "`date`"
"""


# adding recourd about app to db
# mod_appkernel_app_kernel_def:
#    ak_def_id, name, ak_base_name, processor_unit, enabled, description, visible, control_criteria
# mod_akrr_appkernels:
#    id,name,nodes_list
db_setup = {
    "mod_appkernel_app_kernel_def":
        (28, 'Graph500', 'graph500', 'node', 0,
         """<a href="http://www.graph500.org" target="_blank" """
         """alt="graph500">Graph 500</a> is a benchmark designed to measure the performance of graph algorithms, an """
         """increasingly important workload in the data-intensive analytics applications.\r\n<p>\r\nCurrently """
         """Graph 500 benchmark contains one computational kernel: the breadth-first search. The input is a """
         """pre-generated graph created with the following parameters:  SCALE=16 and edgefactor=16. These """
         """translate to, on a per MPI process basis,  2^SCALE=65536 vertices and """
         """65536*edgefactor=1.04 million edges.""", 0, None),
    "mod_akrr_appkernels": (28, 'graph500', '1;2;4;8')
}
