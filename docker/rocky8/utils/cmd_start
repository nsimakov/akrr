#!/bin/bash
MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}

echo "Reach Entry Point"
if [ "$USER" = "root" ]; then
    echo $$ > /var/run/enrypoint.pid
fi

# sometimes /usr/local/sbin is not in PATH
export PATH="/usr/local/sbin:$PATH"

set -e

loop=0

run_bash=0

run_bash_akrruser=0

start_process(){
    name=$1
    command=$2
    pid_file=$3
    user=${4:-x}

    launch=false

    if [ ! -f "${pid_file}" ]; then
        launch=true
    elif [ ! -f "/proc/$(cat "${pid_file}")" ]; then
        launch=true
    fi

    if [ "$launch" = true ] ;then
        if [ "$user" = "x" ]; then
            echo "Launching ${name}"
            ${command}
        else
            echo "Launching ${name} as ${user} user"
            sudo -u "${user}" "${command}"
        fi
    else
        echo "${name} already running"
    fi
}

# Start process and confirm it launches by looking for a
# confirm_sentence in log_file.
# Format:
# start_process_w_confirm name command pid_file log_file confirm_sentence
start_process_w_confirm(){
    name=$1
    command=$2
    pid_file=$3
    log_file=$4
    confirm_sentence=$5
    timeout_time=2

    if [ -f "${pid_file}" ]; then
        if [  -d "/proc/$(cat "${pid_file}")" ]; then
            echo "${name} already running"
            return 1
        fi
    fi

    if [ -f "${log_file}" ]; then
        cat "${log_file}" >> "${log_file}.old"
        rm "${log_file}"
    fi

    echo "Launching ${name}"
    ${command}

    for ((i=0; i < timeout_time; i++))
    {
        if grep -q "${confirm_sentence}" "${log_file}" ; then
            echo "${name} is up"
            return 0
        fi
        sleep 1
    }

    echo "Something wrong with ${name}, can not find key-phrase in log"
    return 1
}


while (( "$#" ))
do
    case "$1" in
    mysqld)
        echo "Launching mysqld"
        [[ -f "/var/log/mariadb/mariadb.log" ]] && rm -f /var/log/mariadb/mariadb.log
        chown -R mysql:mysql /var/lib/mysql
        trap "/sbin/shutdown.sh mysqld; exit" SIGHUP SIGINT SIGTERM
        mysqld_safe &
        mysqladmin -u root --password=${MYSQL_ROOT_PASSWORD} --silent --wait=30 ping
        ;;
    munged)
        start_process munged munged /run/munge/munged.pid munge
        ;;
    sshd)
        start_process sshd /usr/sbin/sshd /run/sshd.pid
        ;;
    slurmdbd)
        start_process_w_confirm slurmdbd /usr/sbin/slurmdbd /run/slurmdbd.pid \
            /var/log/slurm/slurmdbd.log started
        ;;
    slurmctld)
        start_process_w_confirm slurmctld /usr/sbin/slurmctld /run/slurmctld.pid \
            /var/log/slurm/slurmctld.log started
        ;;
    slurmd)
        start_process_w_confirm slurmd /usr/sbin/slurmd /run/slurmd.pid \
            /var/log/slurm/slurmd.log started
        ;;
    httpd)
        echo "Launching httpd"
        httpd
        ;;
    self_contained_slurm_wlm)
        cmd_start munged sshd mysqld slurmdbd slurmctld slurmd
        ;;
    akrr_v1)
        echo "Launching akrr v1.0"
        AKRRUSER_HOME=${AKRRUSER_HOME:-/home/akrruser}
        AKRRUSER=${AKRRUSER:-akrruser}
        sudo -u $AKRRUSER /usr/bin/python2 $AKRRUSER_HOME/akrr/src/akrrscheduler.py start
        ;;
    bash)
        echo "Will launching bash at the end"
        run_bash=1
        ;;
    bash_akrruser)
        echo "Will launching bash at the end as akrruser"
        run_bash_akrruser=1
        ;;
    run_tests)
        echo "Start Tests: $RUN_TESTS"
        $RUN_TESTS
        ;;
    -env)
        # set env
        export $2=$3
        echo "set environment variable $2 to $3"
        shift
        shift
        ;;
    -c)
        # from docker cmd skip to next
        ;;
    -loop)
        loop=1
        ;;
    -set-no-exit-on-fail)
        set +e
        ;;
    -set-exit-on-fail)
        set -e
        ;;
    *)
        echo "Executing $1"
        eval "$1"
        ;;
    esac
    shift
done

if [ $run_bash -eq 1 ]; then
    /bin/bash
elif [ $run_bash_akrruser -eq 1 ]; then
    su - akrruser
elif [ $loop -eq 1 ]; then
    echo "All requested daemon launched"
    while true; do
        sleep 60
    done
fi
